<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>LWN.net</title>
        <link>https://lwn.net</link>
        <description>LWN.net is a comprehensive source of news and opinions from
        and about the Linux community.  This is the main LWN.net feed,
        listing all articles which are posted to the site front page.</description>
        <language>en-us</language>
        <webMaster>lwn@lwn.net</webMaster>
        <pubDate>Thu, 30 May 2024 11:05:46 +0000</pubDate>
        <lastBuildDate>Thu, 30 May 2024 11:21:21 +0000</lastBuildDate>
        <docs>https://www.rssboard.org/rss-specification</docs>
        <atom:link href="https://lwn.net/headlines/rss" rel="self" type="application/rss+xml">
        </atom:link>
        <item>
            <title>[$] LWN.net Weekly Edition for May 23, 2024</title>
            <link>https://lwn.net/Articles/973888/</link>
            <description><![CDATA[The LWN.net Weekly Edition for May 23, 2024 is available.]]></description>
            <guid>https://lwn.net/Articles/973888/</guid>
            <pubDate>Thu, 23 May 2024 01:25:41 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Supporting larger block sizes in filesystems</title>
            <link>https://lwn.net/Articles/974219/</link>
            <description><![CDATA[In a 
combined storage and filesystem session at the 2024
<a
href="https://events.linuxfoundation.org/lsfmmbpf/">Linux Storage,
Filesystem, Memory Management, and BPF Summit</a>, Luis Chamberlain led a
discussion on filesystem support for block sizes larger than the usual 4KB
page size, 
which followed up on  <a href="https://lwn.net/Articles/933437/">discussion from last year</a>.  While the
session was meant to look at the intersection of larger block sizes
with atomic block writes  that avoid torn
(partial) writes (which was also <a
href="https://lwn.net/Articles/933015/">discussed last year</a>), it mostly focused on the
filesystem side.  Over time, the
block sizes offered by storage devices have risen from the original
512&nbsp;bytes; Chamberlain
wanted to discuss filesystem support for block sizes larger than 4KB.]]></description>
            <guid>https://lwn.net/Articles/974219/</guid>
            <pubDate>Wed, 22 May 2024 20:10:22 +0000</pubDate>
            <dc:creator>jake</dc:creator>
        </item>
        <item>
            <title>[$] Two sessions on CXL memory</title>
            <link>https://lwn.net/Articles/974518/</link>
            <description><![CDATA[<a href="https://en.wikipedia.org/wiki/Compute_Express_Link">Compute
Express Link (CXL)</a> is a data-center-oriented memory solution that,
according to some in the industry, will yield large cost savings and
performance improvements.  Others are more skeptical.  At the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a>, two sessions covered CXL
and how it will be supported in future kernels.]]></description>
            <guid>https://lwn.net/Articles/974518/</guid>
            <pubDate>Wed, 22 May 2024 18:56:17 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] The path to deprecating SPARSEMEM</title>
            <link>https://lwn.net/Articles/974517/</link>
            <description><![CDATA[The term "memory model" is used in a couple of ways within the kernel.
Perhaps the more obscure meaning is the memory-management subsystem's view
of how physical memory is organized on a given system.  A proper
representation of physical memory will be more efficient in terms of memory
and CPU use.  Since hardware comes in numerous variations, the kernel
supports a number of memory models to match; see <a
href="https://lwn.net/Articles/789304/">this article</a> for details.  At the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a>, Oscar Salvador,
presenting remotely, made the case for removing one of those models.]]></description>
            <guid>https://lwn.net/Articles/974517/</guid>
            <pubDate>Wed, 22 May 2024 18:58:04 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Documenting page flags by committee</title>
            <link>https://lwn.net/Articles/974515/</link>
            <description><![CDATA[For every page of memory in the system, the kernel maintains a set of page
flags describing how the page is used and various aspects of its current
state.  Space for page flags has been in <a
href="https://lwn.net/Articles/335768/">chronic short supply</a>, leading to a desire to
eliminate or consolidate them whenever possible.  That objective, though,
is hampered by the fact that the purpose of many page flags is not well
understood.  In a memory-management-track session at the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a>, Matthew Wilcox set out to
cooperatively update the page-flag documentation to improve that situation.]]></description>
            <guid>https://lwn.net/Articles/974515/</guid>
            <pubDate>Wed, 22 May 2024 17:26:15 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Merging msharefs</title>
            <link>https://lwn.net/Articles/974512/</link>
            <description><![CDATA[The problem of sharing page tables across processes has been discussed
numerous times over the years, Khaled Aziz said at the beginning of his <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a> session on the topic.  He
was there to, once again, talk about the proposed <a
href="https://lwn.net/Articles/895217/"><tt>mshare()</tt></a> system call (which, in its
current form, is no longer actually a system call but the feature still
goes by that name) and to see what can be done to finally get it into the
mainline.]]></description>
            <guid>https://lwn.net/Articles/974512/</guid>
            <pubDate>Wed, 22 May 2024 17:25:13 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Toward the unification of hugetlbfs</title>
            <link>https://lwn.net/Articles/974491/</link>
            <description><![CDATA[The kernel's <a
href="https://docs.kernel.org/admin-guide/mm/hugetlbpage.html">hugetlbfs
subsystem</a> was the first mechanism by which the kernel made huge pages
available to user space; it was added to the 2.5.46 development kernel in
2002.  While hugetlbfs remains useful, it is also viewed as a sort of
second memory-management subsystem that would be best unified with the rest
of the kernel.  At the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a>, Peter Xu raised the
question of what that unification would involve and what the first steps
might be.]]></description>
            <guid>https://lwn.net/Articles/974491/</guid>
            <pubDate>Wed, 22 May 2024 16:53:09 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] The KeePassXC kerfuffle</title>
            <link>https://lwn.net/Articles/973782/</link>
            <description><![CDATA[<p><a href="https://keepassxc.org/">KeePassXC</a> is an open-source (GPLv3),
cross-platform password manager with local-only data storage. The
project comes with a number of <a
href="https://github.com/keepassxreboot/keepassxc/wiki/Building-KeePassXC#build-options">build
options</a> that can be used to toggle optional features, such as <a
href="https://keepassxc.org/docs/KeePassXC_GettingStarted#_setup_browser_integration">browser
integration</a> and <a
href="https://keepassxc.org/docs/KeePassXC_UserGuide#_database_sharing_with_keeshare">password
database sharing</a>. However, controversy ensued when Debian Developer Julian Klode decided to
make use of these compile flags to disable these features to improve security in the
<tt>keepassxc</tt> package uploaded to Debian unstable for the
upcoming Debian 13 ("Trixie") release.</p>]]></description>
            <guid>https://lwn.net/Articles/973782/</guid>
            <pubDate>Wed, 22 May 2024 16:30:54 +0000</pubDate>
            <dc:creator>jzb</dc:creator>
        </item>
        <item>
            <title>[$] The interaction between memory reclaim and RCU</title>
            <link>https://lwn.net/Articles/974487/</link>
            <description><![CDATA[The <a href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux
Storage, Filesystem, Memory-Management and BPF Summit</a> was a development
conference, where discussion was prioritized and presentations with a lot
of slides were discouraged.  Paul McKenney seemingly flouted this
convention in a joint session of the storage, filesystem, and
memory-management tracks where he presented about 50&nbsp;slides â€” in five
minutes, twice.  The subject was the use of the read-copy-update (RCU)
mechanism in the memory-reclaim process, and whether changes to RCU would
be needed for that purpose.]]></description>
            <guid>https://lwn.net/Articles/974487/</guid>
            <pubDate>Wed, 22 May 2024 15:40:03 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Faster page faults with RCU-protected VMA walks</title>
            <link>https://lwn.net/Articles/974392/</link>
            <description><![CDATA[Looking up a virtual memory area (VMA) in a process's address space, for
the handling of page faults or any of a number of other tasks, in
multi-threaded processes has long been bedeviled by lock contention in the
kernel.  As a result, developer gatherings have been subjected to many
sessions on how to improve the situation.  At the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a>, developers in the
memory-management track met, in a session led by Liam Howlett, to talk
about a situation that has improved considerably in recent times, but which
still offers opportunities for optimization.]]></description>
            <guid>https://lwn.net/Articles/974392/</guid>
            <pubDate>Wed, 22 May 2024 13:55:33 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Virtual machine scheduling with BPF</title>
            <link>https://lwn.net/Articles/974363/</link>
            <description><![CDATA[<p>
Vineeth Pillai gave a remote talk at the 2024
<a href="https://events.linuxfoundation.org/lsfmmbpf/">Linux Storage,
Filesystem, Memory Management, and BPF Summit</a> explaining how BPF could be
used to improve the performance of virtual machines (VMs). Pillai has
<a href="https://lwn.net/ml/linux-kernel/20240403140116.3002809-1-vineeth@bitbyteword.org/">
a patch
set</a> designed to let guest and host machines share scheduling information in
order to eliminate some of the overhead of running in a VM. The assembled
developers had several comments on the design, but seemed overall to approve of
the prospect.
</p>]]></description>
            <guid>https://lwn.net/Articles/974363/</guid>
            <pubDate>Wed, 22 May 2024 13:18:31 +0000</pubDate>
            <dc:creator>daroc</dc:creator>
        </item>
        <item>
            <title>[$] Another try for address-space isolation</title>
            <link>https://lwn.net/Articles/974390/</link>
            <description><![CDATA[Brendan Jackman started his memory-management-track session at the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit</a> by saying that, for some
years now, the kernel community has been stuck in a reactive posture with
regard to hardware vulnerabilities.  Each problem shows up with its own
scary name, and kernel developers find a way to mitigate it, usually losing
performance in the process.  Jackman said that it is time to take back the
initiative against these vulnerabilities by reconsidering the more
general use of address-space isolation.]]></description>
            <guid>https://lwn.net/Articles/974390/</guid>
            <pubDate>Tue, 21 May 2024 22:35:12 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Memory-allocation profiling for the kernel</title>
            <link>https://lwn.net/Articles/974380/</link>
            <description><![CDATA[Optimizing the kernel's memory use is made much easier if developers have
an accurate idea of how memory is being used, but the kernel's
instrumentation is not as good as it could be.  When Suren Baghdasaryan and
Kent Overstreet <a href="https://lwn.net/Articles/932402/">presented</a> their
memory-allocation profiling work, which is meant to address this
shortcoming, at the 2023 Linux Storage, Filesystem, Memory Management, and
BPF Summit, their objective was uncontroversial but the proposed solution
ran into opposition that played out at length on the mailing lists (<a
href="https://lwn.net/ml/linux-kernel/20240212213922.783301-1-surenb@google.com/">example</a>)
over the last year.  So it may be a bit surprising that, when the two
returned to the memory-management track in the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 gathering</a>, the
controversy was gone and the discussion focused on improving details of the
implementation.]]></description>
            <guid>https://lwn.net/Articles/974380/</guid>
            <pubDate>Tue, 21 May 2024 20:34:35 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Dynamically sizing the kernel stack</title>
            <link>https://lwn.net/Articles/974367/</link>
            <description><![CDATA[The kernel stack is a scarce and tightly constrained resource; kernel
developers often have to go far out of their way to avoid using too much
stack space.  The size of the stack is also fixed, leading to situations
where it is too small for some code paths, while wastefully large for
others.  At the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit</a>, Pasha Tatashin proposed
making the kernel stack size dynamic, making more space available when
needed while saving memory overall.  This change is not as easy to
implement as it might seem, though.]]></description>
            <guid>https://lwn.net/Articles/974367/</guid>
            <pubDate>Tue, 21 May 2024 15:37:03 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Facing down mapcount madness</title>
            <link>https://lwn.net/Articles/974223/</link>
            <description><![CDATA[The <a
href="https://elixir.bootlin.com/linux/v6.9.1/source/include/linux/mm_types.h#L35"><tt>page</tt>
structure</a> is a complicated beast, but some parts of it are more
intimidating than others.  The <tt>mapcount</tt> field is one of the
scarier parts.  It allegedly records the number of references to the page
in page tables, but, as David Hildenbrand described during the
memory-management track at the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit</a>, things are more
complicated than that.  Few people truly understand the semantics of this
field, but the situation will hopefully get better over time.]]></description>
            <guid>https://lwn.net/Articles/974223/</guid>
            <pubDate>Tue, 21 May 2024 12:54:06 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] What&apos;s next for the SLUB allocator</title>
            <link>https://lwn.net/Articles/974138/</link>
            <description><![CDATA[There are two fundamental levels of memory allocator in the Linux kernel:
the page allocator, which allocates memory in units of pages, and the slab
allocator, which allocates arbitrarily-sized chunks that are usually (but
not necessarily) smaller than a page.  The slab allocator is the one that
stands behind commonly used kernel functions like <tt>kmalloc()</tt>.  At
the <a href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux
Storage, Filesystem, Memory Management, and BPF Summit</a>, slab maintainer
Vlastimil Babka provided an update on recent changes at the slab level and
discussed the changes that are yet to come.]]></description>
            <guid>https://lwn.net/Articles/974138/</guid>
            <pubDate>Mon, 20 May 2024 18:28:56 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] A plan to make BPF kfuncs polymorphic</title>
            <link>https://lwn.net/Articles/974102/</link>
            <description><![CDATA[<p>
David Vernet kicked off the BPF track at 2024's BPF track at the
<a href="https://events.linuxfoundation.org/lsfmmbpf/">Linux Storage,
Filesystem, Memory Management, and BPF Summit</a>
with a
talk about polymorphic kfuncs â€” or, with less jargon, kernel functions that can
be called from BPF which use different implementations depending on context.
He explained how this would be useful to
the <a href="https://lwn.net/Articles/972710/">sched_ext</a> BPF scheduling framework,
but expected it to be helpful in
other areas as well.
</p>]]></description>
            <guid>https://lwn.net/Articles/974102/</guid>
            <pubDate>Mon, 20 May 2024 15:58:17 +0000</pubDate>
            <dc:creator>daroc</dc:creator>
        </item>
        <item>
            <title>[$] Trinity keeps KDE 3 on life support</title>
            <link>https://lwn.net/Articles/973130/</link>
            <description><![CDATA[<p>As the shiny new <a href="https://lwn.net/Articles/963851/">KDE&nbsp;Plasma&nbsp;6</a> desktop makes its way into distribution
releases, a <a href="https://manpages.debian.org/testing/apt-listchanges/apt-listchanges.1.en.html">small group</a> of developers is still trying to preserve the
KDE experience circa&nbsp;2008. The <a
href="https://trinitydesktop.org/">Trinity&nbsp;Desktop&nbsp;Environment</a>
(TDE), is a continuation of KDE&nbsp;3 that has maintained the
old-school desktop with semi-regular releases since 2010. The most
recent release, <a
href="https://wiki.trinitydesktop.org/Release_Notes_For_R14.1.2">R14.1.2</a>,
was <a href="https://trinitydesktop.org/newsentry.php?entry=2024.04.28">announced</a>
on April 28. TDE does deliver a usable retro desktop, but with
some limitations that hamper its usability on modern systems.</p>]]></description>
            <guid>https://lwn.net/Articles/973130/</guid>
            <pubDate>Mon, 20 May 2024 14:14:36 +0000</pubDate>
            <dc:creator>jzb</dc:creator>
        </item>
        <item>
            <title>[$] Better support for locally-attached-memory tiering</title>
            <link>https://lwn.net/Articles/974126/</link>
            <description><![CDATA[The term "memory tiering" refers to the management of memory placement on
systems with multiple types of memory, each of which has its own
performance characteristics.  On such systems, poor placement can lead to
significantly worse performance.  A memory-management-track discussion at
the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit</a> took yet another look at
tiering challenges with a focus on upcoming technologies that may simplify
(or complicate) the picture.]]></description>
            <guid>https://lwn.net/Articles/974126/</guid>
            <pubDate>Mon, 20 May 2024 14:21:07 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] Extending the mempolicy interface for heterogeneous systems</title>
            <link>https://lwn.net/Articles/973964/</link>
            <description><![CDATA[Non-uniform memory access (NUMA) systems are organized with their CPUs
grouped into nodes, each of which has memory attached to it.  All memory in
the system is accessible from all CPUs, but memory attached to the local
node is faster.  The kernel's <a
href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">memory-policy
("mempolicy") interface</a> allows threads to inform the kernel about how
they would like their memory placed to get the best performance.  In recent
years, the NUMA concept has been extended to support the management of
different types of memory in a system, pushing the limits of the mempolicy
subsystem.  In a remotely presented session at the <a
href="https://events.linuxfoundation.org/lsfmmbpf/">2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit</a>, Gregory Price discussed
the ways in which the kernel's memory-policy support should evolve to
handle today's more-complex systems.]]></description>
            <guid>https://lwn.net/Articles/973964/</guid>
            <pubDate>Sat, 18 May 2024 14:10:29 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] GitLab CI for the kernel</title>
            <link>https://lwn.net/Articles/972713/</link>
            <description><![CDATA[<p>
Working on the Linux kernel has always been unlike working on
many other software projects.
One particularly noticeable difference is the decentralized nature of the
kernel's testing infrastructure. Projects such as
<a href="https://github.com/google/syzkaller">
syzkaller</a>, <a href="https://foundation.kernelci.org/">KernelCI</a>,
or <a href="https://lwn.net/Articles/608959/">the kernel self tests</a>
test the kernel in different ways. On February 28, Helen
Koike
<a href="https://lwn.net/ml/linux-kernel/20240228225527.1052240-1-helen.koike@collabora.com/">
posted</a> a patch set that would add continuous integration (CI) scripts for
the whole kernel. The response was generally positive, but several people
suggested changes.
</p>]]></description>
            <guid>https://lwn.net/Articles/972713/</guid>
            <pubDate>Fri, 17 May 2024 20:18:42 +0000</pubDate>
            <dc:creator>daroc</dc:creator>
        </item>
        <item>
            <title>[$] An update and future plans for DAMON</title>
            <link>https://lwn.net/Articles/973702/</link>
            <description><![CDATA[The <a href="https://docs.kernel.org/mm/damon/index.html">DAMON</a>
subsystem was the subject of the first session in the memory-management
track at the <a href="https://events.linuxfoundation.org/lsfmmbpf/">Linux
Storage, Filesystem, Memory Management, and BPF Summit</a>.  DAMON
maintainer SeongJae Park introduced the data-access monitoring
framework, which can generate snapshots of how memory is accessed, enabling
the detection of hot and cold regions of memory in both the virtual and
physical address spaces.  The session covered recent changes and future
plans for this tool.]]></description>
            <guid>https://lwn.net/Articles/973702/</guid>
            <pubDate>Fri, 17 May 2024 14:05:30 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>[$] The first half of the 6.10 merge window</title>
            <link>https://lwn.net/Articles/973687/</link>
            <description><![CDATA[The merge window for the 6.10 kernel release opened on May&nbsp;12; between
then and the time of this writing, 6,819 non-merge commits were pulled into
the mainline kernel for that release.  Your editor has taken some time out
from <a href="https://lwn.net/Articles/lsfmmbpf2024/">LSFMM+BPF</a> in an attempt to keep
up with the commit flood.  Read on for an overview of the most significant
changes that were pulled in the early part of the 6.10 merge window.]]></description>
            <guid>https://lwn.net/Articles/973687/</guid>
            <pubDate>Thu, 16 May 2024 17:00:01 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>Results from the 2024 FreeBSD Community Survey Report</title>
            <link>https://lwn.net/Articles/975807/</link>
            <description><![CDATA[<p>The <a href="https://freebsdfoundation.org/">FreeBSD Foundation</a> has <a
href="https://freebsdfoundation.org/blog/results-from-the-2024-freebsd-community-survey-report/">announced</a>
the <a
href="https://freebsdfoundation.org/wp-content/uploads/2024/05/FreeBSD-2024_surv_web-_Final.pdf">2024
FreeBSD Community Survey Report</a>. The report provides a summary of
1,446 responses to an anonymous online survey of FreeBSD users. It
provides insights into user profiles, typical usage, how the FreeBSD
project is viewed, as well as recommendations for expanding the
FreeBSD community and contributor base:</p>

<blockquote class="bq">
Currently fewer than half of users consider FreeBSD their daily
driver; Individuals are less likely than Corporate Users to consider
FreeBSD primary. The barrier seems to be less about software and more
about hardware support, particularly around Wi-Fi drivers (which are
at the top of the wish list for the Foundation to focus on in the
coming year). A relatively high number of those who don't consider
FreeBSD their main OS say they would consider doing so with hardware
support for desktops and laptops that was equivalent to Linux.
</blockquote>

<p>The <a
href="https://freebsdfoundation.org/wp-content/uploads/2024/05/2024_comsurv_rawdata.pdf">raw
data</a> for the survey is available as well.</p>

<p> </p>]]></description>
            <guid>https://lwn.net/Articles/975807/</guid>
            <pubDate>Wed, 29 May 2024 17:41:25 +0000</pubDate>
            <dc:creator>jzb</dc:creator>
        </item>
        <item>
            <title>A plea for more thoughtful comments</title>
            <link>https://lwn.net/Articles/975597/</link>
            <description><![CDATA[When redesigning the LWN site in 2002, we thought long and hard about
whether the ability to post comments should be part of it; LWN had not
offered that feature for the first four years of its existence.  There were
already plenty of examples of how comments can go bad by then, but we
decided to trust our readers to keep things under control.  Much of the
time, that trust has proved justified, but there have been times where
things have not gone so well.  This time is quickly becoming one of those
others.]]></description>
            <guid>https://lwn.net/Articles/975597/</guid>
            <pubDate>Wed, 29 May 2024 16:28:02 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>Security updates for Wednesday</title>
            <link>https://lwn.net/Articles/975737/</link>
            <description><![CDATA[Security updates have been issued by <b>AlmaLinux</b> (glibc and tomcat), <b>Fedora</b> (chromium, fcitx5-qt, python-pyqt6, qadwaitadecorations, qgnomeplatform, qt6, qt6-qt3d, qt6-qt5compat, qt6-qtbase, qt6-qtcharts, qt6-qtcoap, qt6-qtconnectivity, qt6-qtdatavis3d, qt6-qtdeclarative, qt6-qtgraphs, qt6-qtgrpc, qt6-qthttpserver, qt6-qtimageformats, qt6-qtlanguageserver, qt6-qtlocation, qt6-qtlottie, qt6-qtmqtt, qt6-qtmultimedia, qt6-qtnetworkauth, qt6-qtopcua, qt6-qtpositioning, qt6-qtquick3d, qt6-qtquick3dphysics, qt6-qtquicktimeline, qt6-qtremoteobjects, qt6-qtscxml, qt6-qtsensors, qt6-qtserialbus, qt6-qtserialport, qt6-qtshadertools, qt6-qtspeech, qt6-qtsvg, qt6-qttools, qt6-qttranslations, qt6-qtvirtualkeyboard, qt6-qtwayland, qt6-qtwebchannel, qt6-qtwebengine, qt6-qtwebsockets, qt6-qtwebview, and zeal), <b>Red Hat</b> (glibc, kernel, kernel-rt, kpatch-patch, linux-firmware, mod_http2, pcp, pcs, protobuf, python3, rpm-ostree, and rust), <b>SUSE</b> (git, glibc-livepatches, kernel, libxml2, openssl-1_1, SUSE Manager Client Tools, SUSE Manager Client Tools, salt, and xdg-desktop-portal), and <b>Ubuntu</b> (amavisd-new, firefox, flask-security, frr, git, intel-microcode, jinja2, libreoffice, linux-intel-iotg, unbound, and webkit2gtk).]]></description>
            <guid>https://lwn.net/Articles/975737/</guid>
            <pubDate>Wed, 29 May 2024 13:20:17 +0000</pubDate>
            <dc:creator>jzb</dc:creator>
        </item>
        <item>
            <title>Security updates for Tuesday</title>
            <link>https://lwn.net/Articles/975529/</link>
            <description><![CDATA[Security updates have been issued by <b>Debian</b> (less), <b>Mageia</b> (chromium-browser-stable), <b>SUSE</b> (apache2, java-1_8_0-openj9, kernel, libqt5-qtnetworkauth, and openssl-3), and <b>Ubuntu</b> (netatalk and python-cryptography).]]></description>
            <guid>https://lwn.net/Articles/975529/</guid>
            <pubDate>Tue, 28 May 2024 13:19:58 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>Huston: Calling Time on DNSSEC?</title>
            <link>https://lwn.net/Articles/975454/</link>
            <description><![CDATA[Geoff Huston <a
href="https://www.potaroo.net/ispcol/2024-05/dnssec-fin.html">suggests</a>
that it is time to give up on DNSSEC and look for a better way to secure
the Internet namespace.
<p>
<blockquote class="bq">
	What appears to be very clear (to me at any rate!) is that DNSSEC
	as we know it today is just not going anywhere. It's too complex,
	too fragile and just too slow to use for the majority of services
	and their users. Some value its benefits highly enough that they
	are prepared to live with its shortcomings, but that's not the case
	for the overall majority of name holders and for the majority of
	users, and no amount of passionate exhortations about DNSSEC will
	change this.
</blockquote>]]></description>
            <guid>https://lwn.net/Articles/975454/</guid>
            <pubDate>Mon, 27 May 2024 21:56:10 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>Security updates for Monday</title>
            <link>https://lwn.net/Articles/975399/</link>
            <description><![CDATA[Security updates have been issued by <b>Debian</b> (apache2, bluez, chromium, fossil, libreoffice, python-pymysql, redmine, and ruby-rack), <b>Fedora</b> (buildah, crosswords, dotnet7.0, glycin-loaders, gnome-tour, helix, helvum, libipuz, loupe, maturin, mingw-libxml2, ntpd-rs, perl-Email-MIME, and a huge list of Rust-based packages due to a "<q>mini-mass-rebuild</q>" that updated the toolchain to Rust 1.78 and picked up fixes for various pieces), <b>Mageia</b> (chromium-browser-stable, mariadb, and roundcubemail), <b>Oracle</b> (kernel, libreoffice, nodejs, and tomcat), and <b>SUSE</b> (cJSON, libfastjson, opera, postgresql15, python3, and qt6-networkauth).]]></description>
            <guid>https://lwn.net/Articles/975399/</guid>
            <pubDate>Mon, 27 May 2024 13:35:26 +0000</pubDate>
            <dc:creator>jake</dc:creator>
        </item>
        <item>
            <title>Kernel prepatch 6.10-rc1</title>
            <link>https://lwn.net/Articles/975145/</link>
            <description><![CDATA[Linus has <a href="https://lwn.net/Articles/975144/">released
6.10-rc1</a> and closed the merge window for this release.  For reasons
that have not been spelled out, the codename for the release has been
changed to "Baby Opossum Posse".]]></description>
            <guid>https://lwn.net/Articles/975145/</guid>
            <pubDate>Sun, 26 May 2024 22:55:37 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>Eight weekend stable kernel updates</title>
            <link>https://lwn.net/Articles/975072/</link>
            <description><![CDATA[<p>The <a href="https://lwn.net/Articles/975073/">6.9.2</a>, <a
href="https://lwn.net/Articles/975074/">6.8.11</a>, <a
href="https://lwn.net/Articles/975075/">6.6.32</a>, <a
href="https://lwn.net/Articles/975076/">6.1.92</a>, <a
href="https://lwn.net/Articles/975078/">5.15.160</a>, <a
href="https://lwn.net/Articles/975079/">5.10.218</a>, <a
href="https://lwn.net/Articles/975077/">5.4.277</a>, and <a href="https://lwn.net/Articles/975080/">4.19.315</a>
stable kernel updates have all been released. Each contains an
important set of fixes. Users of those kernels should upgrade.</p>
<p></p>]]></description>
            <guid>https://lwn.net/Articles/975072/</guid>
            <pubDate>Sun, 26 May 2024 00:07:16 +0000</pubDate>
            <dc:creator>jzb</dc:creator>
        </item>
        <item>
            <title>BitKeeper, Linux, and licensing disputes: How Linus wrote Git in 14 days 
(Graphite blog)</title>
            <link>https://lwn.net/Articles/974914/</link>
            <description><![CDATA[<a
href="https://graphite.dev/blog/bitkeeper-linux-story-of-git-creation">This
Graphite blog post</a> retells the history of the BitKeeper fiasco and the
dawn of the Git era.
<p>
<blockquote class="bq">
	When we think of history, we often romanticize it as being born of
	a sudden stroke of inspiration. But the creation of git shows the
	far harsher reality of invention: a slowly escalating disagreement
	over a license; the need for a scrappy backup solution to unblock
	work; and then continued polishing and iteration through years and
	years, led not by the inventor, but rather a community.
</blockquote>
<p>
For those who weren't around in those days, a perusal of the LWN coverage
from the time might be of interest too, including:
<p>
<ul>
<li> <a href="https://lwn.net/1998/1015/kernel.php3">Our first mention of BitKeeper</a>
     in October 1998
<li> <a href="https://lwn.net/1999/features/BitKeeper.php3">Not quite open source</a>,
     1999
<li> <a href="https://lwn.net/2002/0207/kernel.php3">Linus tries out BitKeeper</a>, 2002
<li> <a href="https://lwn.net/2002/0425/">The free software community and proprietary
     packages</a>, 2002
<li> <a href="https://lwn.net/Articles/130746/">The kernel and BitKeeper part ways</a>,
     2005
<li> <a href="https://lwn.net/Articles/132938/">How Tridge reverse engineered
     BitKeeper</a>, 2005
<li> <a href="https://lwn.net/Articles/131657/">The guts of Git</a>, 2005
</ul>
<p>
...and a lot more for those who care to search for it.]]></description>
            <guid>https://lwn.net/Articles/974914/</guid>
            <pubDate>Fri, 24 May 2024 13:34:17 +0000</pubDate>
            <dc:creator>corbet</dc:creator>
        </item>
        <item>
            <title>Security updates for Friday</title>
            <link>https://lwn.net/Articles/974913/</link>
            <description><![CDATA[Security updates have been issued by <b>Fedora</b> (chromium, libreoffice, and thunderbird), <b>Red Hat</b> (.NET 7.0, .NET 8.0, gdk-pixbuf2, git-lfs, glibc, python3, and xorg-x11-server-Xwayland), <b>SUSE</b> (firefox, opensc, and ucode-intel), and <b>Ubuntu</b> (cjson and gnome-remote-desktop).]]></description>
            <guid>https://lwn.net/Articles/974913/</guid>
            <pubDate>Fri, 24 May 2024 13:16:45 +0000</pubDate>
            <dc:creator>daroc</dc:creator>
        </item>
        <item>
            <title>KDE Gear 24.05.0</title>
            <link>https://lwn.net/Articles/974708/</link>
            <description><![CDATA[<p>The <a href="https://kde.org/">KDE Project</a> has <a
href="https://kde.org/announcements/gear/24.05.0/">announced</a> the
release of KDE Gear 24.05.0, with new features and updates for the
more than 200 <a href="https://apps.kde.org/">applications</a> that
are part of the project. In addition to new versions of the <a href="https://apps.kde.org/dolphin/">Dolphin</a>
file manager, <a href="https://kdenlive.org/">Kdenlive</a> video
editor, and <a href="https://apps.kde.org/elisa/">Elisa</a> music player, this
release includes five applications new to KDE Gear: the <a
href="https://apps.kde.org/audex">Audex</a> CD-ripper application,
an application <a href="https://apps.kde.org/accessibilityinspector">Accessibility
Inspector</a>, the <a href="https://apps.kde.org/francis">Francis</a>
<a href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Pomodoro</a> timer, <a
href="https://apps.kde.org/kalm">Kalm</a> to teach breathing techniques, and a <a
href="https://en.wikipedia.org/wiki/Sokoban">Sokoban</a>-like game
called <a href="https://apps.kde.org/skladnik">Skladnik</a>. See the
<a href="https://kde.org/announcements/changelogs/gear/24.05.0/">full
changelog</a> for a complete list of changes.</p>

<p> </p>]]></description>
            <guid>https://lwn.net/Articles/974708/</guid>
            <pubDate>Thu, 23 May 2024 14:16:47 +0000</pubDate>
            <dc:creator>jzb</dc:creator>
        </item>
        <item>
            <title>Security updates for Thursday</title>
            <link>https://lwn.net/Articles/974824/</link>
            <description><![CDATA[Security updates have been issued by <b>Debian</b> (chromium), <b>Fedora</b> (chromium, libxml2, pgadmin4, and python-libgravatar), <b>Mageia</b> (ghostscript), <b>Red Hat</b> (389-ds:1.4, ansible-core, bind and dhcp, container-tools:rhel8, edk2, exempi, fence-agents, freeglut, frr, ghostscript, glibc, gmp, go-toolset:rhel8, grafana, grub2, gstreamer1-plugins-bad-free, gstreamer1-plugins-base, gstreamer1-plugins-good, harfbuzz, httpd:2.4, idm:DL1, idm:DL1 and idm:client modules, kernel, kernel-rt, krb5, LibRaw, libreoffice, libsndfile, libssh, libtiff, libX11, libxml2, libXpm, linux-firmware, motif, mutt, openssh, osbuild and osbuild-composer, pam, pcp, pcs, perl-Convert-ASN1, perl-CPAN, perl:5.32, pki-core:10.6 and pki-deps:10.6 modules, pmix, poppler, postgresql-jdbc, python-dns, python-jinja2, python-pillow, python27:2.7, python3.11, python3.11-cryptography, python3.11-urllib3, python39:3.9 and python39-devel:3.9 modules, qt5-qtbase, resource-agents, squashfs-tools, sssd, systemd, tigervnc, tomcat, traceroute, varnish:6, virt:rhel and virt-devel:rhel modules, vorbis-tools, webkit2gtk3, xorg-x11-server, xorg-x11-server-Xwayland, and zziplib), <b>SUSE</b> (chromium, perl, postgresql14, and python-sqlparse), and <b>Ubuntu</b> (klibc, linux-aws-hwe, openssl, and vlc).]]></description>
            <guid>https://lwn.net/Articles/974824/</guid>
            <pubDate>Thu, 23 May 2024 13:58:59 +0000</pubDate>
            <dc:creator>jake</dc:creator>
        </item>
    </channel>
</rss>